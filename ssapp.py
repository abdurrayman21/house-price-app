# -*- coding: utf-8 -*-
"""ssapp.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Mhw2vqABc-F7wsG1Bd0HOOUioj3iJRip
"""

# app.py

import streamlit as st
import pandas as pd
import joblib
import plotly.express as px

# --- Load the model and preprocessor from the tuple ---
model_tuple = joblib.load("house_price_model.pkl")

# Unpack the model and preprocessor
model, preprocessor = model_tuple

# --- Streamlit Page Setup ---
st.set_page_config(page_title="House Price Estimator", layout="wide")
st.title("üè† House Price Prediction App")
st.markdown("This app predicts **house sale prices** using a trained machine learning model and Streamlit UI.")

# --- Sidebar Inputs ---
st.sidebar.header("Enter House Features")

OverallQual = st.sidebar.slider("Overall Quality (1-10)", 1, 10, 5)
GrLivArea = st.sidebar.number_input("Above Grade Living Area (Sq Ft)", min_value=300, max_value=10000, value=1500)
GarageCars = st.sidebar.slider("Garage Capacity (Cars)", 0, 4, 2)
TotalBsmtSF = st.sidebar.number_input("Total Basement SF", min_value=0, max_value=3000, value=800)
FullBath = st.sidebar.slider("Number of Full Bathrooms", 0, 4, 2)
YearBuilt = st.sidebar.slider("Year Built", 1870, 2023, 2000)

# --- Predict Price ---
if st.sidebar.button("Estimate Price"):
    input_df = pd.DataFrame([[OverallQual, GrLivArea, GarageCars, TotalBsmtSF, FullBath, YearBuilt]],
                             columns=['OverallQual', 'GrLivArea', 'GarageCars', 'TotalBsmtSF', 'FullBath', 'YearBuilt'])

    try:
        processed_input = preprocessor.transform(input_df)
        prediction = model.predict(processed_input)[0]
        st.success(f"üè° Estimated Sale Price: **${prediction:,.2f}**")
    except Exception as e:
        st.error(f"Prediction failed: {e}")

